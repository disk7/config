# lazy.toml

# [[plugins]]
# repo = 'Shougo/denite.nvim'
# on_event = 'BufRead'
# hook_add = '''
# '''
# hook_post_source = '''
# call denite#custom#var('file_rec', 'command',
# \ ['ag', '--nogroup', '--nocolor', '--column'])
# call denite#custom#var('grep', 'command',
# \ ['ag', '--nogroup', '--nocolor', '--column'])
# call denite#custom#var('grep', 'default_opts', [])
# call denite#custom#var('grep', 'recursive_opts', [])
# '''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
'''
on_i = 1
#  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
#    \ neosnippet#expandable_or_jumpable() ?
#    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"


[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-e> <Plug>(neosnippet_expand_or_jump)
  smap <C-e> <Plug>(neosnippet_expand_or_jump)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
  let g:neosnippet#snippets_directory='~/.vim/bundle/neosnippet-snippets/snippets/'
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

  #xmap <C-e> <Plug>(neosnippet_expand_target)

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
  let g:go_fmt_command = 'goimports'
  let s:goargs = go#package#ImportPath()
  let g:neomake_go_errcheck_maker = {
    \ 'args': ['-abspath', s:goargs],
    \ 'append_file': 0,
    \ 'errorformat': '%f:%l:%c:\ %m, %f:%l:%c\ %#%m',
    \ }
  let g:neomake_go_enabled_makers = ['golint', 'govet', 'errcheck']
'''
